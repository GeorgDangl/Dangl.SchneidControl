// <auto-generated />
using System;
using Dangl.SchneidControl.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dangl.SchneidControl.Migrations
{
    [DbContext(typeof(DataLoggingContext))]
    [Migration("20250812105417_HeatMeterReplacements")]
    partial class HeatMeterReplacements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Dangl.SchneidControl.Data.DataEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("LogEntryType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAtUtc");

                    b.HasIndex("LogEntryType");

                    b.ToTable("DataEntries");
                });

            modelBuilder.Entity("Dangl.SchneidControl.Data.HeatMeterReplacement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InitialValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OldMeterValue")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReplacedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HeatMeterReplacements");
                });
#pragma warning restore 612, 618
        }
    }
}
